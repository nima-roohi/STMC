Index.PACKAGES = {"edu" : [], "edu.stmc" : [{"name" : "edu.stmc.HypMethod", "shortDescription" : "Same as SimulationMethod, with a few default implementations and a few more additional functions that helptesting the class without using Sampler or Expression.", "members_class" : [{"label" : "clone", "tail" : "(): HypMethod", "member" : "edu.stmc.HypMethod.clone", "link" : "edu\/stmc\/HypMethod.html#clone():edu.stmc.HypMethod", "kind" : "def"}, {"label" : "getResult", "tail" : "(sampler: Sampler): AnyRef", "member" : "edu.stmc.HypMethod.getResult", "link" : "edu\/stmc\/HypMethod.html#getResult(sampler:simulator.sampler.Sampler):AnyRef", "kind" : "def"}, {"label" : "getProgress", "tail" : "(iters: Int, sampler: Sampler): Int", "member" : "edu.stmc.HypMethod.getProgress", "link" : "edu\/stmc\/HypMethod.html#getProgress(iters:Int,sampler:simulator.sampler.Sampler):Int", "kind" : "def"}, {"label" : "computeMissingParameterAfterSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterAfterSim", "link" : "edu\/stmc\/HypMethod.html#computeMissingParameterAfterSim():Unit", "kind" : "def"}, {"label" : "computeMissingParameterBeforeSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterBeforeSim", "link" : "edu\/stmc\/HypMethod.html#computeMissingParameterBeforeSim():Unit", "kind" : "def"}, {"member" : "edu.stmc.HypMethod#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "edu\/stmc\/HypMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "edu\/stmc\/HypMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "edu\/stmc\/HypMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "edu\/stmc\/HypMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "edu\/stmc\/HypMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "edu\/stmc\/HypMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "edu\/stmc\/HypMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "edu\/stmc\/HypMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "edu\/stmc\/HypMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "edu\/stmc\/HypMethod.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "edu\/stmc\/HypMethod.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "edu\/stmc\/HypMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "edu\/stmc\/HypMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "edu\/stmc\/HypMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "edu\/stmc\/HypMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "failed_to_reject", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethod.failed_to_reject", "link" : "edu\/stmc\/HypMethod.html#failed_to_reject:Boolean", "kind" : "abstract def"}, {"label" : "rejected", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethod.rejected", "link" : "edu\/stmc\/HypMethod.html#rejected:Boolean", "kind" : "abstract def"}, {"label" : "decided", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethod.decided", "link" : "edu\/stmc\/HypMethod.html#decided:Boolean", "kind" : "abstract def"}, {"label" : "completed", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethod.completed", "link" : "edu\/stmc\/HypMethod.html#completed:Boolean", "kind" : "abstract def"}, {"label" : "update", "tail" : "(positive: Int, negative: Int): Unit", "member" : "edu.stmc.HypMethod.update", "link" : "edu\/stmc\/HypMethod.html#update(positive:Int,negative:Int):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(positive: Boolean): Unit", "member" : "edu.stmc.HypMethod.update", "link" : "edu\/stmc\/HypMethod.html#update(positive:Boolean):Unit", "kind" : "abstract def"}, {"label" : "getResultExplanation", "tail" : "(sampler: Sampler): String", "member" : "edu.stmc.HypMethod.getResultExplanation", "link" : "edu\/stmc\/HypMethod.html#getResultExplanation(sampler:simulator.sampler.Sampler):String", "kind" : "abstract def"}, {"label" : "shouldStopNow", "tail" : "(iters: Int, sampler: Sampler): Boolean", "member" : "edu.stmc.HypMethod.shouldStopNow", "link" : "edu\/stmc\/HypMethod.html#shouldStopNow(iters:Int,sampler:simulator.sampler.Sampler):Boolean", "kind" : "abstract def"}, {"label" : "getParametersString", "tail" : "(): String", "member" : "edu.stmc.HypMethod.getParametersString", "link" : "edu\/stmc\/HypMethod.html#getParametersString():String", "kind" : "abstract def"}, {"label" : "getMissingParameter", "tail" : "(): AnyRef", "member" : "edu.stmc.HypMethod.getMissingParameter", "link" : "edu\/stmc\/HypMethod.html#getMissingParameter():AnyRef", "kind" : "abstract def"}, {"label" : "setExpression", "tail" : "(expr: Expression): Unit", "member" : "edu.stmc.HypMethod.setExpression", "link" : "edu\/stmc\/HypMethod.html#setExpression(expr:parser.ast.Expression):Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.reset", "link" : "edu\/stmc\/HypMethod.html#reset():Unit", "kind" : "abstract def"}, {"label" : "getFullName", "tail" : "(): String", "member" : "edu.stmc.HypMethod.getFullName", "link" : "edu\/stmc\/HypMethod.html#getFullName():String", "kind" : "abstract def"}, {"label" : "getName", "tail" : "(): String", "member" : "edu.stmc.HypMethod.getName", "link" : "edu\/stmc\/HypMethod.html#getName():String", "kind" : "abstract def"}], "class" : "edu\/stmc\/HypMethod.html", "kind" : "class"}, {"name" : "edu.stmc.HypMethodSPRT", "shortDescription" : "Sequential Probability Ratio Test", "members_class" : [{"label" : "failed_to_reject", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodSPRT.failed_to_reject", "link" : "edu\/stmc\/HypMethodSPRT.html#failed_to_reject:Boolean", "kind" : "def"}, {"label" : "rejected", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodSPRT.rejected", "link" : "edu\/stmc\/HypMethodSPRT.html#rejected:Boolean", "kind" : "def"}, {"label" : "decided", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodSPRT.decided", "link" : "edu\/stmc\/HypMethodSPRT.html#decided:Boolean", "kind" : "def"}, {"label" : "completed", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodSPRT.completed", "link" : "edu\/stmc\/HypMethodSPRT.html#completed:Boolean", "kind" : "def"}, {"label" : "status", "tail" : "(): Binary", "member" : "edu.stmc.HypMethodSPRT.status", "link" : "edu\/stmc\/HypMethodSPRT.html#status:edu.stmc.CompResult.Binary", "kind" : "def"}, {"label" : "status", "tail" : "(logT: Double): Binary", "member" : "edu.stmc.HypMethodSPRT.status", "link" : "edu\/stmc\/HypMethodSPRT.html#status(logT:Double):edu.stmc.CompResult.Binary", "kind" : "def"}, {"label" : "update", "tail" : "(positive: Int, negative: Int): Unit", "member" : "edu.stmc.HypMethodSPRT.update", "link" : "edu\/stmc\/HypMethodSPRT.html#update(positive:Int,negative:Int):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(positive: Boolean): Unit", "member" : "edu.stmc.HypMethodSPRT.update", "link" : "edu\/stmc\/HypMethodSPRT.html#update(positive:Boolean):Unit", "kind" : "def"}, {"label" : "getMissingParameter", "tail" : "(): AnyRef", "member" : "edu.stmc.HypMethodSPRT.getMissingParameter", "link" : "edu\/stmc\/HypMethodSPRT.html#getMissingParameter():AnyRef", "kind" : "def"}, {"label" : "shouldStopNow", "tail" : "(iters: Int, sampler: Sampler): Boolean", "member" : "edu.stmc.HypMethodSPRT.shouldStopNow", "link" : "edu\/stmc\/HypMethodSPRT.html#shouldStopNow(iters:Int,sampler:simulator.sampler.Sampler):Boolean", "kind" : "def"}, {"label" : "setExpression", "tail" : "(expr: Expression): Unit", "member" : "edu.stmc.HypMethodSPRT.setExpression", "link" : "edu\/stmc\/HypMethodSPRT.html#setExpression(expr:parser.ast.Expression):Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): HypMethodSPRT", "member" : "edu.stmc.HypMethodSPRT.clone", "link" : "edu\/stmc\/HypMethodSPRT.html#clone():edu.stmc.HypMethodSPRT", "kind" : "def"}, {"label" : "getResultExplanation", "tail" : "(sampler: Sampler): String", "member" : "edu.stmc.HypMethodSPRT.getResultExplanation", "link" : "edu\/stmc\/HypMethodSPRT.html#getResultExplanation(sampler:simulator.sampler.Sampler):String", "kind" : "def"}, {"label" : "getParametersString", "tail" : "(): String", "member" : "edu.stmc.HypMethodSPRT.getParametersString", "link" : "edu\/stmc\/HypMethodSPRT.html#getParametersString():String", "kind" : "def"}, {"label" : "getFullName", "tail" : "(): String", "member" : "edu.stmc.HypMethodSPRT.getFullName", "link" : "edu\/stmc\/HypMethodSPRT.html#getFullName():String", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "edu.stmc.HypMethodSPRT.getName", "link" : "edu\/stmc\/HypMethodSPRT.html#getName():String", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "edu.stmc.HypMethodSPRT.reset", "link" : "edu\/stmc\/HypMethodSPRT.html#reset():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(threshold: Double, alpha: Double, beta: Double, delta: Double, LB: Boolean): HypMethodSPRT", "member" : "edu.stmc.HypMethodSPRT.init", "link" : "edu\/stmc\/HypMethodSPRT.html#init(threshold:Double,alpha:Double,beta:Double,delta:Double,LB:Boolean):edu.stmc.HypMethodSPRT", "kind" : "def"}, {"member" : "edu.stmc.HypMethodSPRT#<init>", "error" : "unsupported entity"}, {"label" : "getResult", "tail" : "(sampler: Sampler): AnyRef", "member" : "edu.stmc.HypMethod.getResult", "link" : "edu\/stmc\/HypMethodSPRT.html#getResult(sampler:simulator.sampler.Sampler):AnyRef", "kind" : "def"}, {"label" : "getProgress", "tail" : "(iters: Int, sampler: Sampler): Int", "member" : "edu.stmc.HypMethod.getProgress", "link" : "edu\/stmc\/HypMethodSPRT.html#getProgress(iters:Int,sampler:simulator.sampler.Sampler):Int", "kind" : "def"}, {"label" : "computeMissingParameterAfterSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterAfterSim", "link" : "edu\/stmc\/HypMethodSPRT.html#computeMissingParameterAfterSim():Unit", "kind" : "def"}, {"label" : "computeMissingParameterBeforeSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterBeforeSim", "link" : "edu\/stmc\/HypMethodSPRT.html#computeMissingParameterBeforeSim():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "edu\/stmc\/HypMethodSPRT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "edu\/stmc\/HypMethodSPRT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "edu\/stmc\/HypMethodSPRT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "edu\/stmc\/HypMethodSPRT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "edu\/stmc\/HypMethodSPRT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "edu\/stmc\/HypMethodSPRT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "edu\/stmc\/HypMethodSPRT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodSPRT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodSPRT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodSPRT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "edu\/stmc\/HypMethodSPRT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "edu\/stmc\/HypMethodSPRT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "edu\/stmc\/HypMethodSPRT.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "edu\/stmc\/HypMethodSPRT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "edu\/stmc\/HypMethodSPRT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "edu\/stmc\/HypMethodSPRT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "edu\/stmc\/HypMethodSPRT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "edu\/stmc\/HypMethodSPRT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "edu\/stmc\/HypMethodSPRT.html", "kind" : "class"}, {"name" : "edu.stmc.HypMethodTSPRT", "shortDescription" : "Ternary Sequential Probability Ratio Test", "members_class" : [{"label" : "failed_to_reject", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodTSPRT.failed_to_reject", "link" : "edu\/stmc\/HypMethodTSPRT.html#failed_to_reject:Boolean", "kind" : "def"}, {"label" : "rejected", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodTSPRT.rejected", "link" : "edu\/stmc\/HypMethodTSPRT.html#rejected:Boolean", "kind" : "def"}, {"label" : "decided", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodTSPRT.decided", "link" : "edu\/stmc\/HypMethodTSPRT.html#decided:Boolean", "kind" : "def"}, {"label" : "completed", "tail" : "(): Boolean", "member" : "edu.stmc.HypMethodTSPRT.completed", "link" : "edu\/stmc\/HypMethodTSPRT.html#completed:Boolean", "kind" : "def"}, {"label" : "status", "tail" : "(): Binary", "member" : "edu.stmc.HypMethodTSPRT.status", "link" : "edu\/stmc\/HypMethodTSPRT.html#status:edu.stmc.CompResult.Binary", "kind" : "def"}, {"label" : "status", "tail" : "(logT: Double): Binary", "member" : "edu.stmc.HypMethodTSPRT.status", "link" : "edu\/stmc\/HypMethodTSPRT.html#status(logT:Double):edu.stmc.CompResult.Binary", "kind" : "def"}, {"label" : "update", "tail" : "(positive: Int, negative: Int): Unit", "member" : "edu.stmc.HypMethodTSPRT.update", "link" : "edu\/stmc\/HypMethodTSPRT.html#update(positive:Int,negative:Int):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(positive: Boolean): Unit", "member" : "edu.stmc.HypMethodTSPRT.update", "link" : "edu\/stmc\/HypMethodTSPRT.html#update(positive:Boolean):Unit", "kind" : "def"}, {"label" : "getMissingParameter", "tail" : "(): AnyRef", "member" : "edu.stmc.HypMethodTSPRT.getMissingParameter", "link" : "edu\/stmc\/HypMethodTSPRT.html#getMissingParameter():AnyRef", "kind" : "def"}, {"label" : "shouldStopNow", "tail" : "(iters: Int, sampler: Sampler): Boolean", "member" : "edu.stmc.HypMethodTSPRT.shouldStopNow", "link" : "edu\/stmc\/HypMethodTSPRT.html#shouldStopNow(iters:Int,sampler:simulator.sampler.Sampler):Boolean", "kind" : "def"}, {"label" : "setExpression", "tail" : "(expr: Expression): Unit", "member" : "edu.stmc.HypMethodTSPRT.setExpression", "link" : "edu\/stmc\/HypMethodTSPRT.html#setExpression(expr:parser.ast.Expression):Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): HypMethodTSPRT", "member" : "edu.stmc.HypMethodTSPRT.clone", "link" : "edu\/stmc\/HypMethodTSPRT.html#clone():edu.stmc.HypMethodTSPRT", "kind" : "def"}, {"label" : "getResultExplanation", "tail" : "(sampler: Sampler): String", "member" : "edu.stmc.HypMethodTSPRT.getResultExplanation", "link" : "edu\/stmc\/HypMethodTSPRT.html#getResultExplanation(sampler:simulator.sampler.Sampler):String", "kind" : "def"}, {"label" : "getParametersString", "tail" : "(): String", "member" : "edu.stmc.HypMethodTSPRT.getParametersString", "link" : "edu\/stmc\/HypMethodTSPRT.html#getParametersString():String", "kind" : "def"}, {"label" : "getFullName", "tail" : "(): String", "member" : "edu.stmc.HypMethodTSPRT.getFullName", "link" : "edu\/stmc\/HypMethodTSPRT.html#getFullName():String", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "edu.stmc.HypMethodTSPRT.getName", "link" : "edu\/stmc\/HypMethodTSPRT.html#getName():String", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "edu.stmc.HypMethodTSPRT.reset", "link" : "edu\/stmc\/HypMethodTSPRT.html#reset():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(threshold: Double, alpha: Double, beta: Double, delta: Double, LB: Boolean): HypMethodTSPRT", "member" : "edu.stmc.HypMethodTSPRT.init", "link" : "edu\/stmc\/HypMethodTSPRT.html#init(threshold:Double,alpha:Double,beta:Double,delta:Double,LB:Boolean):edu.stmc.HypMethodTSPRT", "kind" : "def"}, {"member" : "edu.stmc.HypMethodTSPRT#<init>", "error" : "unsupported entity"}, {"label" : "getResult", "tail" : "(sampler: Sampler): AnyRef", "member" : "edu.stmc.HypMethod.getResult", "link" : "edu\/stmc\/HypMethodTSPRT.html#getResult(sampler:simulator.sampler.Sampler):AnyRef", "kind" : "def"}, {"label" : "getProgress", "tail" : "(iters: Int, sampler: Sampler): Int", "member" : "edu.stmc.HypMethod.getProgress", "link" : "edu\/stmc\/HypMethodTSPRT.html#getProgress(iters:Int,sampler:simulator.sampler.Sampler):Int", "kind" : "def"}, {"label" : "computeMissingParameterAfterSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterAfterSim", "link" : "edu\/stmc\/HypMethodTSPRT.html#computeMissingParameterAfterSim():Unit", "kind" : "def"}, {"label" : "computeMissingParameterBeforeSim", "tail" : "(): Unit", "member" : "edu.stmc.HypMethod.computeMissingParameterBeforeSim", "link" : "edu\/stmc\/HypMethodTSPRT.html#computeMissingParameterBeforeSim():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "edu\/stmc\/HypMethodTSPRT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "edu\/stmc\/HypMethodTSPRT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "edu\/stmc\/HypMethodTSPRT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "edu\/stmc\/HypMethodTSPRT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "edu\/stmc\/HypMethodTSPRT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "edu\/stmc\/HypMethodTSPRT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "edu\/stmc\/HypMethodTSPRT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodTSPRT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodTSPRT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "edu\/stmc\/HypMethodTSPRT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "edu\/stmc\/HypMethodTSPRT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "edu\/stmc\/HypMethodTSPRT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "edu\/stmc\/HypMethodTSPRT.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "edu\/stmc\/HypMethodTSPRT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "edu\/stmc\/HypMethodTSPRT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "edu\/stmc\/HypMethodTSPRT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "edu\/stmc\/HypMethodTSPRT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "edu\/stmc\/HypMethodTSPRT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "edu\/stmc\/HypMethodTSPRT.html", "kind" : "class"}]};